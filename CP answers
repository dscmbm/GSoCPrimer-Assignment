ADD Competitive Programming answers here.
# include <iostream>
# include <string>
using namespace std;




Q1.
int Multiple(int a, int b){
    return a*b;
}



Q2.
bool evenOdd(int a){
    if(a%2 == 0)
        return true;
    return false;
}




Q3.
int factorial(int n){
    if(n<0)
        return -1;
    
    if(n == 0)
        return 1;

    if(n==1)
        return 1;
    
    return (n*factorial(n-1));
}




Q4.
int vowelCount(char* arr){
    int count = 0;
    for(int i=0;arr[i]!='\0';i++){
        if(*(arr+i) == 'a' || *(arr+i) == 'e' || *(arr+i) == 'i' || *(arr+i) == 'o' || *(arr+i) == 'u'){
            count++;
        }
    }
    return count;
}




Q5.
int maxinArr(int* arr, int size){
    int max = *arr;
    for(int i=1;i<size;i++){
        if(*(arr+i)>max)
            max = *(arr+i);
    }

    return max;
}




Q6.
int mininArr(int *arr, int size){
    int min = *arr;
    for(int i=1;i<size;i++){
        if(*(arr+i)<min)
            min = *(arr+i);
    }

    return min;
}




Q7.
void Swap(int *a, int *b){
    *a = *a + *b;
    *b = *a - *b;
    *a = *a - *b;
}




Q8.
bool leapYear(int year){
    if(year%400 == 0 || (year%100 != 0 && year%4 == 0))
        return true;
    return false;
}




Q9.
void reversestring(char* arr, int size){
    int s=0;
    int e= size-1;

    while(s<=e){
        char temp = *(arr+s);
        *(arr+s) = *(arr +e);
        *(arr +e)= temp;
        s++;
        e++;
    }
}




Q10.
int maxofthree(int a, int b, int c){
    if(a>b && a>c)
        return a;
    
    if(b>a && b>c)
        return b;
    
    if(c>a && c>b)
        return c;
}




// Q1. A) O(N)
// Q2. B) stack
// Q3. B) exit the loop
// Q4. A) must be sorted
// Q5. D) the input size the algorithm can handle   
